Description:
    The Matrix2D class represents a matrix of doubles, and has methods
    for adding, subtracting, and multiplying Matrix2D objects, as well
    as getters for member variables of the class. The Matrix2D class
    is meant to be immutable, and so the class has been made final
    along with all the member variables of the class. None of the
    methods of the class (aside from the constructor) make any 
    modifications to the instances data.

    The ImmutableMatrix class is meant to exercise the Matrix2D class and
    show that it is immutable. I've written this class to make a 
    random matrix and a copy of it, and show that each method is 
    non-destructive to the instance by comparing  the matrix to it's 
    original state after each method is invoked. 

Assumptions:
    Assumes that the testing method done in ImmutableMatrix.java is 
    satisfactory to prove the immutability of a Matrix2D instance. 
    I didn't put in any checks for modifying the Matrix2D's data 
    directly, as the class is final and it's variables are private
    and final. I didn't find an exception for accessing private 
    variables.

Files:
    ImmutableMatrix.java    - Class file containing tests on Matrix2D
    Matrix2D.java       - Class file for Matrix2D. Stores each matrix
                            as double[][]. Has private members
                            .columns (int) and .rows (int)
                            Class instances are final, as are its
                            private members
